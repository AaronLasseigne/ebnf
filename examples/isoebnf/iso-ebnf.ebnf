# W3C EBNF for ISO/IEC 14977 : 1996 EBNF
# (Scoured from https://www.cl.cam.ac.uk/~mgk25/iso-14977.pdf)

syntax                      ::= syntax_rule*
                            
syntax_rule                 ::= meta_identifier defining_symbol definitions_list terminator_symbol
                            
definitions_list            ::= single_definition (definition_separator_symbol definitions_list)*
                            
single_definition           ::= term (',' term)*
                            
term                        ::= factor ('-' exception)?
                            
exception                   ::= factor
                            
factor                      ::= (integer '*')? primary

primary                     ::= optional_sequence
                              | repeated_sequence
                              | special_sequence
                              | grouped_sequence
                              | meta_identifier
                              | terminal_string
                              | empty

optional_sequence           ::= start_option_symbol definitions_list end_option_symbol

repeated_sequence           ::= start_repeat_symbol definitions_list end_repeat_symbol

grouped_sequence            ::= '(' definitions_list ')'

# Note, the following are nominally terminal rules,
# although ISO EBNF does not really distinguish between non-terminal and terminal rules.

@terminals

letter                      ::= [a-zA-Z]
decimal_digit               ::= [0-9]

integer                     ::= decimal_digit+

meta_identifier             ::= letter meta_identifier_character*

# Extended to allow '_'
meta_identifier_character   ::= letter | decimal_digit | '_'
                       
terminal_string             ::= ("'" first_terminal_character+ "'")
                              | ('"' second_terminal_character+ '"')

first_terminal_character    ::= terminal_character - "'"

second_terminal_character   ::= terminal_character - '"'

special_sequence            ::= '?' special_sequence_character* '?'

special_sequence_character  ::= terminal_character - '?'

terminal_character          ::= letter
                              | decimal_digit
                              | concatenate_symbol
                              | defining_symbol
                              | definition_separator_symbol
                              | end_comment_symbol
                              | end_group_symbol
                              | end_option_symbol
                              | end_repeat_symbol
                              | except_symbol
                              | first_quote_symbol
                              | repetition_symbol
                              | second_quote_symbol
                              | special_sequence_symbol
                              | start_comment_symbol
                              | start_group_symbol
                              | start_option_symbol
                              | start_repeat_symbol
                              | terminator_symbol
                              | other_character

other_character            ::= [:+_%@&$<>^` Ìƒ#x20#x23] | '\'

gap_separator              ::= [#x9#xa#xb#xc#xd#x20]

@pass                           gap_separator+

empty                      ::= ''

# Simple terminals that are often extended
defining_symbol            ::= '=' | ':'
definition_separator_symbol ::= '|' | '/' | '!'
terminator_symbol           ::= ';' | '.'
start_option_symbol         ::= '[' | '(/'
end_option_symbol           ::= ']' | '/)'
start_repeat_symbol         ::= '{' | '(:'
end_repeat_symbol           ::= '}' | ':)'

# Symbols described, but not actually used.

gap_free_symbol            ::= (terminal_character - ['"])
                             | terminal_string

repetition_symbol          ::= '*'
except_symbol              ::= '-'
concatenate_symbol         ::= ','
first_quote_symbol         ::= "'"
second_quote_symbol        ::= '"'
start_comment_symbol       ::= '(*'
end_comment_symbol         ::= '*)'
start_group_symbol         ::= '('
end_group_symbol           ::= ')'
special_sequence_symbol    ::= '?'

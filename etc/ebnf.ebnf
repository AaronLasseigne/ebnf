/* An EBNF grammar for EBNF */
[1] ebnf        ::= (declaration | rule)*

[2] declaration ::= '@terminals' | pass

[3] rule        ::= lhs '::=' expression

[4] lhs         ::= '[' SYMBOL ']' SYMBOL

[5] expression  ::= alt

[6] alt         ::= seq ('|' seq)*

[7] seq         ::= diff+

[8] diff        ::= postfix ('-' postfix)*

[9] postfix     ::= primary ( [?*+] )?

[10] primary    ::= HEX
                |   RANGE
                |   ENUM
                |   O_RANGE
                |   O_ENUM
                |   STRING1
                |   STRING2
                |   '(' expression ')'

[11] pass       ::= '@pass'
                    (
                      [#x20\t\r\n]
                    | ( '#' | '//' ) [^\r\n]*
                    | ('/*' ([^*] | '*' [^/])* '*/')
                    )+

@terminals

[12] SYMBOL     ::= ([a-z] | [A-Z] | [0-9] | "_" | ".")+

[13] HEX        ::= '#x' ([0-9] | [a-f] | [A-F])+

[14] RANGE      ::= '[' CHAR '-' CHAR ']'

[15] ENUM       ::= '[' CHAR+ ']'

[16] O_RANGE    ::= '[^' CHAR '-' CHAR ']'

[17] O_ENUM     ::= '[^' CHAR+ ']'

[18] STRING1    ::= '"' (CHAR - '"')* '"'

[19] STRING2    ::= "'" (CHAR - "'")* "'"

[20] CHAR       ::= HEX
                |   ('\\' [\\trn'"])
                |   [^\t\r\n'"]

@pass           ::= (
                      [#x20\t\r\n]
                    #| ( '#' | '//' ) [^\r\n]*
                    #| '/*' (( '*' [^/] )? | [^*] )* '*/'
                    )+

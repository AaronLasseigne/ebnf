# This file is automatically generated by bin/ebnf
# BRANCH derived from etc/ebnf.ebnf
module Branch
  START = :ebnf

  BRANCH = {
    :alt => {
      "(" => [:seq, :_alt_1],
      :ENUM => [:seq, :_alt_1],
      :HEX => [:seq, :_alt_1],
      :O_ENUM => [:seq, :_alt_1],
      :O_RANGE => [:seq, :_alt_1],
      :RANGE => [:seq, :_alt_1],
      :STRING1 => [:seq, :_alt_1],
      :STRING2 => [:seq, :_alt_1],
      :SYMBOL => [:seq, :_alt_1],
    },
    :_alt_1 => {
      ")" => [],
      "@pass" => [],
      "@terminals" => [],
      :ENUM => [],
      "|" => [:_alt_3],
    },
    :_alt_2 => {
      "|" => ["|", :seq],
    },
    :_alt_3 => {
      "|" => [:_alt_2, :_alt_1],
    },
    :declaration => {
      "@pass" => [:pass],
      "@terminals" => ["@terminals"],
    },
    :diff => {
      "(" => [:postfix, :_diff_1],
      :ENUM => [:postfix, :_diff_1],
      :HEX => [:postfix, :_diff_1],
      :O_ENUM => [:postfix, :_diff_1],
      :O_RANGE => [:postfix, :_diff_1],
      :RANGE => [:postfix, :_diff_1],
      :STRING1 => [:postfix, :_diff_1],
      :STRING2 => [:postfix, :_diff_1],
      :SYMBOL => [:postfix, :_diff_1],
    },
    :_diff_1 => {
      "(" => [],
      ")" => [],
      "-" => [:_diff_3],
      "@pass" => [],
      "@terminals" => [],
      :ENUM => [],
      :HEX => [],
      :O_ENUM => [],
      :O_RANGE => [],
      :RANGE => [],
      :STRING1 => [],
      :STRING2 => [],
      :SYMBOL => [],
      "|" => [],
    },
    :_diff_2 => {
      "-" => ["-", :postfix],
    },
    :_diff_3 => {
      "-" => [:_diff_2, :_diff_1],
    },
    :ebnf => {
      "@pass" => [:_ebnf_2],
      "@terminals" => [:_ebnf_2],
      :ENUM => [:_ebnf_2],
    },
    :_ebnf_1 => {
      "@pass" => [:declaration],
      "@terminals" => [:declaration],
      :ENUM => [:rule],
    },
    :_ebnf_2 => {
      "@pass" => [:_ebnf_1, :ebnf],
      "@terminals" => [:_ebnf_1, :ebnf],
      :ENUM => [:_ebnf_1, :ebnf],
    },
    :expression => {
      "(" => [:alt],
      :ENUM => [:alt],
      :HEX => [:alt],
      :O_ENUM => [:alt],
      :O_RANGE => [:alt],
      :RANGE => [:alt],
      :STRING1 => [:alt],
      :STRING2 => [:alt],
      :SYMBOL => [:alt],
    },
    :lhs => {
      :ENUM => [:ENUM, :SYMBOL],
    },
    :pass => {
      "@pass" => ["@pass", :PASS],
    },
    :postfix => {
      "(" => [:primary, :_postfix_1],
      :ENUM => [:primary, :_postfix_1],
      :HEX => [:primary, :_postfix_1],
      :O_ENUM => [:primary, :_postfix_1],
      :O_RANGE => [:primary, :_postfix_1],
      :RANGE => [:primary, :_postfix_1],
      :STRING1 => [:primary, :_postfix_1],
      :STRING2 => [:primary, :_postfix_1],
      :SYMBOL => [:primary, :_postfix_1],
    },
    :_postfix_1 => {
      "(" => [],
      ")" => [],
      "-" => [],
      "@pass" => [],
      "@terminals" => [],
      :ENUM => [],
      :HEX => [],
      :O_ENUM => [],
      :O_RANGE => [],
      :POSTFIX => [:POSTFIX],
      :RANGE => [],
      :STRING1 => [],
      :STRING2 => [],
      :SYMBOL => [],
      "|" => [],
    },
    :primary => {
      "(" => [:_primary_1],
      :ENUM => [:ENUM],
      :HEX => [:HEX],
      :O_ENUM => [:O_ENUM],
      :O_RANGE => [:O_RANGE],
      :RANGE => [:RANGE],
      :STRING1 => [:STRING1],
      :STRING2 => [:STRING2],
      :SYMBOL => [:SYMBOL],
    },
    :_primary_1 => {
      "(" => ["(", :expression, ")"],
    },
    :rule => {
      :ENUM => [:lhs, "::=", :expression],
    },
    :seq => {
      "(" => [:diff, :_seq_1],
      :ENUM => [:diff, :_seq_1],
      :HEX => [:diff, :_seq_1],
      :O_ENUM => [:diff, :_seq_1],
      :O_RANGE => [:diff, :_seq_1],
      :RANGE => [:diff, :_seq_1],
      :STRING1 => [:diff, :_seq_1],
      :STRING2 => [:diff, :_seq_1],
      :SYMBOL => [:diff, :_seq_1],
    },
    :_seq_1 => {
      "(" => [:_seq_2],
      ")" => [],
      "@pass" => [],
      "@terminals" => [],
      :ENUM => [:_seq_2],
      :HEX => [:_seq_2],
      :O_ENUM => [:_seq_2],
      :O_RANGE => [:_seq_2],
      :RANGE => [:_seq_2],
      :STRING1 => [:_seq_2],
      :STRING2 => [:_seq_2],
      :SYMBOL => [:_seq_2],
      "|" => [],
    },
    :_seq_2 => {
      "(" => [:diff, :_seq_1],
      :ENUM => [:diff, :_seq_1],
      :HEX => [:diff, :_seq_1],
      :O_ENUM => [:diff, :_seq_1],
      :O_RANGE => [:diff, :_seq_1],
      :RANGE => [:diff, :_seq_1],
      :STRING1 => [:diff, :_seq_1],
      :STRING2 => [:diff, :_seq_1],
      :SYMBOL => [:diff, :_seq_1],
    },
  }.freeze
  TERMINALS = [
    "(",
    ")",
    "-",
    "::=",
    "@pass",
    "@terminals",
    :ENUM,
    :HEX,
    :O_ENUM,
    :O_RANGE,
    :POSTFIX,
    :RANGE,
    :STRING1,
    :STRING2,
    :SYMBOL,
    "|"
  ].freeze
  FIRST = {
    :alt => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :_alt_1 => [
      :_eps,
      "|"],
    :_alt_2 => [
      "|"],
    :_alt_3 => [
      "|"],
    :_alt_4 => [
      :_eps,
      "|"],
    :_alt_5 => [
      :_eps,
      "|"],
    :_alt_6 => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :declaration => [
      "@terminals",
      "@pass"],
    :diff => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :_diff_1 => [
      :_eps,
      "-"],
    :_diff_2 => [
      "-"],
    :_diff_3 => [
      "-"],
    :_diff_4 => [
      :_eps,
      "-"],
    :_diff_5 => [
      :_eps,
      "-"],
    :_diff_6 => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :ebnf => [
      :_eps,
      "@terminals",
      "@pass",
      :ENUM],
    :_ebnf_1 => [
      "@terminals",
      "@pass",
      :ENUM],
    :_ebnf_2 => [
      "@terminals",
      "@pass",
      :ENUM],
    :_ebnf_3 => [
      :_eps,
      "@terminals",
      "@pass",
      :ENUM],
    :_empty => [
      :_eps],
    :expression => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :lhs => [
      :ENUM],
    :_lhs_1 => [
      :SYMBOL],
    :pass => [
      "@pass"],
    :postfix => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :_postfix_1 => [
      :POSTFIX,
      :_eps],
    :_postfix_2 => [
      :POSTFIX,
      :_eps],
    :primary => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :_primary_1 => [
      "("],
    :_primary_2 => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :_primary_3 => [
      ")"],
    :rule => [
      :ENUM],
    :_rule_1 => [
      "::="],
    :_rule_2 => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :seq => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :_seq_1 => [
      :_eps,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :_seq_2 => [
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :_seq_3 => [
      :_eps,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
    :_seq_4 => [
      :_eps,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "("],
  }.freeze
  FOLLOW = {
    nil => [
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :alt => [
      ")",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_alt_1 => [
      ")",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_alt_2 => [
      "|",
      ")",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_alt_3 => [
      ")",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_alt_4 => [
      ")",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_alt_5 => [
      ")",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_alt_6 => [
      "|",
      ")",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :declaration => [
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :diff => [
      ")",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_diff_1 => [
      ")",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_diff_2 => [
      "-",
      ")",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_diff_3 => [
      ")",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_diff_4 => [
      ")",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_diff_5 => [
      ")",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_diff_6 => [
      "-",
      ")",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :ebnf => [
      :_eof],
    :_ebnf_1 => [
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_ebnf_2 => [
      :_eof],
    :_ebnf_3 => [
      :_eof],
    :expression => [
      ")",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :lhs => [
      "::="],
    :_lhs_1 => [
      "::="],
    :pass => [
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :postfix => [
      ")",
      "-",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_postfix_1 => [
      ")",
      "-",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_postfix_2 => [
      ")",
      "-",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :primary => [
      :POSTFIX,
      ")",
      "-",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_primary_1 => [
      :POSTFIX,
      ")",
      "-",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_primary_2 => [
      :POSTFIX,
      ")",
      "-",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :_primary_3 => [
      :POSTFIX,
      ")",
      "-",
      "|",
      :_eof,
      :HEX,
      :SYMBOL,
      :RANGE,
      :ENUM,
      :O_RANGE,
      :O_ENUM,
      :STRING1,
      :STRING2,
      "@terminals",
      "(",
      "@pass"],
    :rule => [
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_rule_1 => [
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_rule_2 => [
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :seq => [
      ")",
      "|",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_seq_1 => [
      ")",
      "|",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_seq_2 => [
      ")",
      "|",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_seq_3 => [
      ")",
      "|",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
    :_seq_4 => [
      ")",
      "|",
      :_eof,
      "@terminals",
      "@pass",
      :ENUM],
  }.freeze
  PASS = [
    :PASS
  ].freeze
end

